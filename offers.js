'use strict';
const _0x58175a = _0xa0dc;
(function (_0x38cd1b, _0x2a8a7b) {
    const _0x24332a = _0xa0dc, _0x5eef27 = _0x38cd1b();
    while (!![]) {
        try {
            const _0x16878b = -parseInt(_0x24332a(0xea)) / 0x1 * (-parseInt(_0x24332a(0xd6)) / 0x2) + -parseInt(_0x24332a(0x6d)) / 0x3 + -parseInt(_0x24332a(0x7e)) / 0x4 + parseInt(_0x24332a(0xa4)) / 0x5 * (parseInt(_0x24332a(0x114)) / 0x6) + -parseInt(_0x24332a(0xb0)) / 0x7 * (parseInt(_0x24332a(0xa3)) / 0x8) + parseInt(_0x24332a(0x143)) / 0x9 + parseInt(_0x24332a(0xbe)) / 0xa;
            if (_0x16878b === _0x2a8a7b)
                break;
            else
                _0x5eef27['push'](_0x5eef27['shift']());
        } catch (_0x1ea75a) {
            _0x5eef27['push'](_0x5eef27['shift']());
        }
    }
}(_0x3079, 0xf314a));
const {
        appendFileSync: _0x1d6dfb,
        writeFileSync: _0x3d0e78,
        readFileSync: _0xaf478c
    } = require('fs'), {isNullOrUndefined: _0x5a9d07} = require('util'), _0x5e0739 = require('yargs'), _0x3a908a = require(_0x58175a(0xf1)), _0x120e37 = require('https'), _0x474db6 = require(_0x58175a(0x138)), _0x552f6d = !!_0x5e0739[_0x58175a(0x101)][_0x58175a(0x136)], _0x1018e6 = _0x5e0739[_0x58175a(0x101)][_0x58175a(0xce)] || 0x0, _0x259f04 = _0x5e0739['argv'][_0x58175a(0xc7)] || _0x58175a(0xb1), _0xbba95b = _0x5e0739['argv']['config'] || _0x58175a(0xd9), _0x10a4eb = _0x5e0739[_0x58175a(0x101)][_0x58175a(0xa8)] || _0x58175a(0x74), _0xfccefd = _0x5e0739['argv'][_0x58175a(0x9c)], _0x537fba = _0x5e0739[_0x58175a(0x101)][_0x58175a(0xf4)], _0xa59b61 = _0x5e0739[_0x58175a(0x101)][_0x58175a(0xc0)], _0x47596a = !!_0x5e0739['argv'][_0x58175a(0x116)], _0x1df874 = !!_0x5e0739[_0x58175a(0x101)][_0x58175a(0x129)], _0x52d6b1 = !!_0x5e0739['argv'][_0x58175a(0x12b)], _0x5772e1 = !!_0x5e0739[_0x58175a(0x101)]['log_fetch_all'], _0x3da91c = !!_0x5e0739['argv'][_0x58175a(0x8e)], _0x42df1b = _0x58175a(0xba), _0x1bc606 = _0x58175a(0x111), _0x582437 = _0x58175a(0x141);
var _0x25bf47, _0x513392, _0x319642, _0x5eead8 = 0x0, _0x49c2de = _0x1018e6, _0x110caf = ![], _0xcc2718 = [], _0xb269e0 = 0x0;
function _0x2eb347(_0x39238b) {
    _0x47596a && console['log'](_0x39238b), _0x1d6dfb(_0x10a4eb, _0x39238b + '\x0a');
}
function _0xdb5ab2(_0x48af1d) {
    const _0x14cdfb = _0x58175a;
    let _0x219bf1 = '';
    try {
        _0x219bf1 = '\x0a' + (_0x48af1d[_0x14cdfb(0xa2)] ? _0x48af1d[_0x14cdfb(0xa2)] : _0x48af1d[_0x14cdfb(0xd8)] ? _0x14cdfb(0xdb) + _0x48af1d['message'] : '' + _0x48af1d);
    } catch (_0x4072bc) {
        _0x219bf1 = _0x48af1d;
    }
    _0x47596a && console[_0x14cdfb(0x12e)](_0x219bf1), _0x1d6dfb(_0x10a4eb, _0x219bf1 + '\x0a');
}
function _0x3079() {
    const _0x2443a8 = [
        '\x0a\x20%\x20Orders\x20matched',
        '\x0a\x20\x20\x20\x20\x20Price:\x20\x20\x20',
        'host',
        'random',
        'skip_if_too_high',
        'user',
        'skip_if_have_bid',
        'https://api.ipify.org?format=json',
        '\x0a\x20%\x20Order\x20cancelled',
        '1134072TYMCwA',
        'Error:\x20No\x20mnemonic\x20phrase\x20or\x20private\x20keys.',
        '2438175xDTYBM',
        'currentPrice',
        'proxy_checking',
        'includes',
        '\x20Fetch\x20timeout.',
        'alchemy_key',
        '\x20Internal\x20processing\x20error.',
        'log.txt',
        'Invalid\x20cache\x20timeput.',
        'Invalid\x20random\x20delay.',
        'random_delay',
        'Invalid\x20switch\x20delay.',
        'gas_price_addition',
        'Invalid\x20process\x20timeout.',
        'wallet_address',
        'Main',
        'createBuyOrder',
        '7659548xbClot',
        'cloudflare',
        'unknown',
        '\x0a\x20%\x20Transaction\x20denied',
        '\x20\x20\x20Invalid\x20asset\x20on\x20line\x20',
        '\x0a\x20!\x20',
        'Using\x20provided\x20OpenSea\x20API\x20key...',
        'Invalid\x20expiration\x20time.',
        'opensea_key',
        'proxy_protocol',
        'orders',
        'maker',
        'port',
        'Content-Type',
        'clear_cache_threshold',
        '\x0aStarting...',
        'log_full',
        '\x0a\x20%\x20Account\x20initialized',
        'Init\x20proxies...',
        'Invalid\x20random\x20factor\x20-\x20too\x20big.',
        'Invalid\x20price\x20epsilon.',
        '\x0a\x20\x20\x20\x20\x20Id:\x20\x20\x20\x20\x20\x20',
        'node_key',
        '\x0aDone.\x0a',
        'API\x20Error\x20500',
        'OpenSeaPort',
        '\x20Request\x20was\x20throttled.',
        'body',
        'length',
        'type',
        'api_key',
        'acquire',
        'gasPrice',
        'Auto\x20price\x20enabled.',
        '\x20Process\x20timeout.',
        '\x0aHeaders:\x20',
        'stack',
        '24zedUzX',
        '1255hsyTpy',
        'parse',
        'Rinkeby',
        'price_roof',
        'output',
        'pass',
        '\x20Offer\x20skipped.\x20Price\x20too\x20high.',
        'Invalid\x20fetch\x20timeput.',
        'engine',
        'InitializeAccount',
        'Invalid\x20delay.',
        'MatchOrders',
        '3882011MmEgBd',
        'list.txt',
        'Network',
        '.alchemyapi.io/v2/',
        '\x0a\x20\x20\x20Switch\x20proxy\x20',
        'headers',
        '\x0a\x20%\x20Transaction\x20failed',
        '\x20Request\x20timeout.',
        '\x0a\x20%\x20Transaction\x20confirmed',
        'match',
        '.stop',
        'split',
        'API\x20Error\x20429',
        'skip_if_too_low',
        '24362710ZBsJjE',
        '\x0a\x20%\x20All\x20assets\x20approved',
        'proxy',
        'ApproveCurrency',
        'private_keys',
        'proxy_list',
        'aborted',
        '\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20',
        'fetch_timeout',
        'file',
        'switch_threshold',
        'socks',
        'mainnet',
        'delay',
        '.infura.io/v3/',
        'price_auto',
        'resume',
        'abort-controller',
        'gas_price',
        'process_timeout',
        'Using\x20Infura...',
        '\x0a\x20%\x20Order\x20denied',
        'options',
        'clear',
        '2dhUYfp',
        '\x20Offer\x20discarded.\x20Too\x20many\x20errors.',
        'message',
        'config.json',
        '\x0a\x20%\x20Currency\x20approved',
        'Error:\x20',
        'addListener',
        'opensea-js',
        'bignumber.js',
        'TransactionFailed',
        'FetchTimeout',
        'price_floor',
        'Invalid\x20random\x20factor.',
        'Error:\x20Invalid\x20proxy\x20syntax\x20-\x20',
        'Warning!\x20Invalid\x20price\x20floor.',
        'switch_delay',
        'CancelOrder',
        '\x0aBody:\x20',
        'ApproveAllAssets',
        '\x20Internal\x20server\x20error.',
        '1226593yzyGra',
        'Using\x20network:\x20rinkeby...',
        'Missing\x20blockchain\x20node\x20API\x20key.',
        'getAsset',
        '\x0a\x20%\x20Wrap\x20ETH',
        '\x20ms.\x0a',
        'user-agent',
        'http',
        '\x20Internal\x20processing\x20error.\x20Set\x20log_full\x20option\x20to\x20see\x20more\x20info.',
        'Missing\x20network\x20name.',
        'wallet',
        'application/json',
        'toLowerCase',
        '\x0a\x20\x20\x20\x20\x20Address:\x20',
        'rinkeby',
        'replace',
        'log_fetch_all',
        'destroy',
        'price_increment_factor',
        'live',
        'now',
        '\x20Offer\x20skipped.\x20Price\x20too\x20low.',
        'globalAgent',
        'argv',
        'random_factor',
        'fetch',
        'stringify',
        'gasPriceAddition',
        '...\x0a',
        'request_filter',
        'Using\x20network:\x20mainnet...',
        'Fatal\x20error:\x20No\x20OpenSeaPort.',
        'network',
        'privateKeys',
        'filter',
        'CreateOrder',
        'Invalid\x20price\x20increment\x20factor.',
        '\x20Offer\x20succeed.',
        '\x0a\x20%\x20Transaction\x20created',
        'https://opensea.io/',
        'getOrders',
        'text',
        '38202xHaLTW',
        'async-mutex',
        'verbose',
        'expiration',
        'mnemonic',
        '\x20-\x20',
        'ProcessTimeout',
        'Delay\x20per\x20line:\x20',
        'Agent',
        '@truffle/hdwallet-provider',
        'skip_if_order_created',
        'UnwrapWeth',
        'catch',
        '\x0aInit\x20config...',
        'TransactionCreated',
        'discard_threshold',
        'TransactionDenied',
        'cache_timeout',
        'user_agent',
        'then',
        'protocol',
        'log_opensea',
        'Invalid\x20clear\x20cache\x20threshold.',
        'log_fetch',
        'price_epsilon',
        '\x20Offer\x20succeed\x20with\x20errors.',
        'error',
        'skip_if_owner_is_buyer',
        'infura_key',
        '\x0a\x20*\x20',
        'is_infura',
        '\x0a\x20\x20\x20',
        'API\x20Error\x20408',
        'cookie',
        'stop',
        'Private\x20keys\x20array\x20is\x20empty.',
        './fetch-cache.js',
        'api'
    ];
    _0x3079 = function () {
        return _0x2443a8;
    };
    return _0x3079();
}
function _0x1d8df4(_0x446cae) {
    const _0x4a33a9 = _0x58175a;
    return _0x446cae === _0x4a33a9(0xca) || _0x446cae === _0x4a33a9(0xfd) ? 'mainnet' : _0x4a33a9(0xf8);
}
function _0x460785() {
    const _0x4c6ec4 = _0x58175a;
    try {
        _0x2eb347(_0x4c6ec4(0x121));
        var _0x5c8127 = JSON['parse'](_0xaf478c(_0xbba95b));
        return _0x5c8127[_0x4c6ec4(0x132)] = _0x4c6ec4(0x130) in _0x5c8127, _0x5c8127[_0x4c6ec4(0x94)] = _0x5c8127[_0x4c6ec4(0x130)] || _0x5c8127[_0x4c6ec4(0x72)], !!_0x5c8127[_0x4c6ec4(0x10a)] && (_0x5c8127['network'] = _0x1d8df4(_0x5c8127[_0x4c6ec4(0x10a)])), !(_0x4c6ec4(0xcb) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0xcb)] = 0x1388), !(_0x4c6ec4(0x102) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0x102)] = 0.5), !('random_delay' in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0x77)] = 0x0), !(_0x4c6ec4(0x117) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0x117)] = 0x18), !(_0x4c6ec4(0x140) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0x140)] = !![]), !(_0x4c6ec4(0xbd) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0xbd)] = ![]), !(_0x4c6ec4(0x13e) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0x13e)] = !![]), !('skip_if_owner_is_buyer' in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0x12f)] = !![]), !(_0x4c6ec4(0x11e) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0x11e)] = ![]), !(_0x4c6ec4(0xc8) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0xc8)] = 0xa), !(_0x4c6ec4(0x123) in _0x5c8127) && (_0x5c8127['discard_threshold'] = 0xa), !(_0x4c6ec4(0x79) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0x79)] = 0x3), !('price_auto' in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0xcd)] = !![]), !(_0x4c6ec4(0x12c) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0x12c)] = 0.0001), !(_0x4c6ec4(0xe1) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0xe1)] = 0.0001), !(_0x4c6ec4(0xa7) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0xa7)] = 0x1), !(_0x4c6ec4(0xfc) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0xfc)] = 0.1), !('proxy_protocol' in _0x5c8127) && (_0x5c8127['proxy_protocol'] = 'http://'), !(_0x4c6ec4(0x6f) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0x6f)] = !![]), !(_0x4c6ec4(0xe5) in _0x5c8127) && (_0x5c8127['switch_delay'] = 0x7d0), !(_0x4c6ec4(0x129) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0x129)] = ![]), !('log_fetch' in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0x12b)] = ![]), !(_0x4c6ec4(0xfa) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0xfa)] = ![]), !(_0x4c6ec4(0x8e) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0x8e)] = ![]), !(_0x4c6ec4(0x8c) in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0x8c)] = 0x5), !('fetch_timeout' in _0x5c8127) && (_0x5c8127[_0x4c6ec4(0xc6)] = 0x2710), !(_0x4c6ec4(0x125) in _0x5c8127) && (_0x5c8127['cache_timeout'] = 0xea60), !(_0x4c6ec4(0xd1) in _0x5c8127) && (_0x5c8127['process_timeout'] = 0x2710), _0x4c6ec4(0x129) in _0x5e0739[_0x4c6ec4(0x101)] && (_0x5c8127[_0x4c6ec4(0x129)] = _0x1df874), 'log_fetch' in _0x5e0739[_0x4c6ec4(0x101)] && (_0x5c8127[_0x4c6ec4(0x12b)] = _0x52d6b1), _0x4c6ec4(0xfa) in _0x5e0739[_0x4c6ec4(0x101)] && (_0x5c8127[_0x4c6ec4(0xfa)] = _0x5772e1), 'log_full' in _0x5e0739[_0x4c6ec4(0x101)] && (_0x5c8127[_0x4c6ec4(0x8e)] = _0x3da91c), _0xfccefd && (_0x5c8127['api_key'] = _0xfccefd), _0x537fba && (_0x5c8127[_0x4c6ec4(0x7b)] = _0x537fba), _0xa59b61 && (_0x5c8127[_0x4c6ec4(0xc3)] = _0xa59b61), _0x5c8127;
    } catch (_0x4aa06c) {
        _0xdb5ab2(_0x4aa06c);
    }
    return {};
}
function _0x2cab8a(_0x2610ce) {
    const _0x4dcda1 = _0x58175a;
    let _0x4a2fb4 = !![];
    return !(_0x4dcda1(0x10a) in _0x2610ce) && (_0x2eb347(_0x4dcda1(0xf3)), _0x4a2fb4 = ![]), !('mnemonic' in _0x2610ce) && !(_0x4dcda1(0xc2) in _0x2610ce) && (_0x2eb347('Missing\x20MetaMask\x20mnemonic\x20or\x20private\x20keys.'), _0x4a2fb4 = ![]), !(_0x4dcda1(0x118) in _0x2610ce) && _0x4dcda1(0xc2) in _0x2610ce && _0x2610ce[_0x4dcda1(0xc2)]['length'] <= 0x0 && (_0x2eb347(_0x4dcda1(0x137)), _0x4a2fb4 = ![]), !('node_key' in _0x2610ce) && (_0x2eb347(_0x4dcda1(0xec)), _0x4a2fb4 = ![]), !('wallet_address' in _0x2610ce) && (_0x2eb347('Missing\x20wallet\x20address.'), _0x4a2fb4 = ![]), _0x2610ce[_0x4dcda1(0xcb)] < 0x0 && (_0x2eb347(_0x4dcda1(0xae)), _0x4a2fb4 = ![]), _0x2610ce[_0x4dcda1(0x102)] < 0x0 && (_0x2eb347(_0x4dcda1(0xe2)), _0x4a2fb4 = ![]), _0x2610ce[_0x4dcda1(0x102)] > 0x3 && (_0x2eb347(_0x4dcda1(0x91)), _0x4a2fb4 = ![]), _0x2610ce[_0x4dcda1(0x77)] < 0x0 && (_0x2eb347(_0x4dcda1(0x76)), _0x4a2fb4 = ![]), _0x2610ce[_0x4dcda1(0xe5)] < 0x0 && (_0x2eb347(_0x4dcda1(0x78)), _0x4a2fb4 = ![]), _0x2610ce[_0x4dcda1(0xc6)] < 0x0 && (_0x2eb347(_0x4dcda1(0xab)), _0x4a2fb4 = ![]), _0x2610ce[_0x4dcda1(0x125)] < 0x0 && (_0x2eb347(_0x4dcda1(0x75)), _0x4a2fb4 = ![]), _0x2610ce['process_timeout'] < 0x0 && (_0x2eb347(_0x4dcda1(0x7a)), _0x4a2fb4 = ![]), _0x2610ce[_0x4dcda1(0x8c)] < 0x0 && (_0x2eb347(_0x4dcda1(0x12a)), _0x4a2fb4 = ![]), _0x2610ce['gas_price_addition'] < 0x0 && (_0x2eb347('Invalid\x20gas\x20price\x20addition.'), _0x4a2fb4 = ![]), _0x2610ce[_0x4dcda1(0xe1)] < 0x0 && _0x2eb347(_0x4dcda1(0xe4)), (_0x2610ce['price_roof'] < 0x0 || _0x2610ce[_0x4dcda1(0xa7)] < _0x2610ce[_0x4dcda1(0xe1)]) && _0x2eb347('Warning!\x20Invalid\x20price\x20roof.'), _0x2610ce['price_epsilon'] < 0x0 && (_0x2eb347(_0x4dcda1(0x92)), _0x4a2fb4 = ![]), (_0x2610ce['price_increment_factor'] < 0x0 || _0x2610ce[_0x4dcda1(0xfc)] > 0x1) && (_0x2eb347(_0x4dcda1(0x10e)), _0x4a2fb4 = ![]), _0x2610ce[_0x4dcda1(0x117)] < 0x0 && (_0x2eb347(_0x4dcda1(0x85)), _0x4a2fb4 = ![]), _0x4a2fb4;
}
function _0x56c935(_0x3d0039) {
    const _0x200fa3 = _0x58175a;
    _0x25bf47[_0x200fa3(0x129)] && _0x2eb347('\x0a\x20\x20\x20OpenSea:\x20\x20' + ('' + _0x3d0039)['replace']('\x0a', _0x200fa3(0xc5)));
}
function _0x5ff764(_0x196d0e) {
    const _0x4536fd = _0x58175a;
    try {
        let _0x4624cc = _0x25bf47[_0x4536fd(0x87)], _0x32c35b = _0x196d0e[_0x4536fd(0xf9)]('\x20', '');
        _0x32c35b[_0x4536fd(0x70)]('//') && (_0x4624cc = _0x32c35b[_0x4536fd(0xf9)](/\/\/.*$/g, '//'), _0x32c35b = _0x32c35b[_0x4536fd(0xf9)](/^.*\/\//g, ''));
        if (_0x32c35b[_0x4536fd(0x70)]('@') && (_0x32c35b[_0x4536fd(0xb9)](/\:/g) || [])[_0x4536fd(0x9a)] == 0x2) {
            const _0x3d4626 = _0x32c35b[_0x4536fd(0xf9)](/.*@/, ''), _0x3d35ba = _0x32c35b[_0x4536fd(0xf9)]('@' + _0x3d4626, '');
            if (!_0x3d35ba || _0x3d35ba[_0x4536fd(0x9a)] == 0x0)
                return _0x2eb347(_0x4536fd(0xe3) + _0x196d0e + '.'), {};
            if (!_0x3d4626 || _0x3d4626['length'] == 0x0)
                return _0x2eb347(_0x4536fd(0xe3) + _0x196d0e + '.'), {};
            const _0x5da280 = _0x3d35ba[_0x4536fd(0xbb)](':'), _0x3e41bd = _0x3d4626[_0x4536fd(0xbb)](':');
            if (_0x5da280['length'] != 0x2)
                return _0x2eb347('Error:\x20Invalid\x20proxy\x20syntax\x20-\x20' + _0x196d0e + '.'), {};
            if (_0x3e41bd[_0x4536fd(0x9a)] != 0x2)
                return _0x2eb347(_0x4536fd(0xe3) + _0x196d0e + '.'), {};
            return {
                'protocol': _0x4624cc,
                'user': _0x5da280[0x0],
                'pass': _0x5da280[0x1],
                'host': _0x3e41bd[0x0],
                'port': parseInt(_0x3e41bd[0x1])
            };
        }
        const _0x10339a = _0x32c35b[_0x4536fd(0xbb)](':');
        if (_0x10339a['length'] == 0x2)
            return {
                'protocol': _0x4624cc,
                'host': _0x10339a[0x0],
                'port': parseInt(_0x10339a[0x1])
            };
        if (_0x10339a[_0x4536fd(0x9a)] == 0x4)
            return {
                'protocol': _0x4624cc,
                'user': _0x10339a[0x2],
                'pass': _0x10339a[0x3],
                'host': _0x10339a[0x0],
                'port': parseInt(_0x10339a[0x1])
            };
    } catch (_0x19cbef) {
        _0xdb5ab2(_0x19cbef);
    }
    return _0x2eb347(_0x4536fd(0xe3) + _0x196d0e + '.'), {};
}
function _0x2c49e4() {
    const _0x3f7c54 = _0x58175a;
    if (_0x3a908a[_0x3f7c54(0x100)])
        _0x3a908a[_0x3f7c54(0x100)]['destroy']();
    if (_0x120e37['globalAgent'])
        _0x120e37[_0x3f7c54(0x100)][_0x3f7c54(0xfb)]();
}
function _0x388063(_0x17c67b, _0x10749d) {
    const _0x365feb = _0x58175a;
    _0x2c49e4(), _0x3a908a[_0x365feb(0x100)] = _0x17c67b, _0x120e37['globalAgent'] = _0x10749d;
}
function _0x299f1e(_0x9beaa4) {
    const _0x47c308 = _0x58175a;
    _0x2c49e4(), _0x3a908a[_0x47c308(0x100)] = _0x9beaa4, _0x120e37[_0x47c308(0x100)] = _0x9beaa4;
}
function _0x46a6da() {
    const _0x4e9408 = _0x58175a;
    _0x2c49e4(), _0x3a908a[_0x4e9408(0x100)] = new _0x3a908a[(_0x4e9408(0x11c))](), _0x120e37[_0x4e9408(0x100)] = new _0x120e37['Agent']();
}
function _0x33de38(_0x2ba93a, _0x1e2933) {
    const _0x135795 = _0x58175a;
    try {
        const _0x1c82c7 = _0x5ff764(_0x1e2933);
        if (_0x1c82c7 && _0x1c82c7 !== {}) {
            let _0x327d71;
            _0x1c82c7[_0x135795(0x13f)] && _0x1c82c7[_0x135795(0x13f)][_0x135795(0x9a)] > 0x0 ? _0x327d71 = '' + _0x1c82c7[_0x135795(0x128)] + _0x1c82c7[_0x135795(0x13f)] + ':' + _0x1c82c7[_0x135795(0xa9)] + '@' + _0x1c82c7['host'] + ':' + _0x1c82c7[_0x135795(0x8a)] : _0x327d71 = '' + _0x1c82c7[_0x135795(0x128)] + _0x1c82c7['host'] + ':' + _0x1c82c7[_0x135795(0x8a)];
            if (_0x1c82c7[_0x135795(0x128)][_0x135795(0x70)]('http')) {
                _0x388063(new require('http-proxy-agent')(_0x327d71), new require('https-proxy-agent')(_0x327d71)), _0x2eb347(_0x135795(0xb4) + _0x2ba93a + '\x20-\x20' + _0x1c82c7[_0x135795(0x128)] + _0x1c82c7[_0x135795(0x13c)] + ':' + _0x1c82c7[_0x135795(0x8a)]);
                return;
            }
            if (_0x1c82c7['protocol']['includes'](_0x135795(0xc9))) {
                _0x299f1e(new require('socks-proxy-agent')(_0x327d71)), _0x2eb347(_0x135795(0xb4) + _0x2ba93a + _0x135795(0x119) + _0x1c82c7[_0x135795(0x128)] + _0x1c82c7[_0x135795(0x13c)] + ':' + _0x1c82c7[_0x135795(0x8a)]);
                return;
            }
            _0x2eb347('Error:\x20Proxy\x20not\x20supported\x20-\x20' + _0x1e2933 + '.');
        }
        _0x46a6da();
    } catch (_0x37e4c6) {
        _0xdb5ab2(_0x37e4c6);
    }
}
function _0x1d4ed0() {
    const _0x4a0950 = _0x58175a;
    _0xcc2718 && _0xcc2718['length'] > 0x0 && (_0xb269e0 = (_0xb269e0 + 0x1) % _0xcc2718[_0x4a0950(0x9a)], _0x33de38(_0xb269e0 + 0x1, _0xcc2718[_0xb269e0]));
}
async function _0x4bf751(_0x1b0d5d) {
    const _0x266b2b = _0x58175a;
    if (_0x1b0d5d <= 0x0)
        return;
    const _0x455e11 = require(_0x266b2b(0x115))['Mutex'], _0x400257 = new _0x455e11();
    let _0x4af4b6 = await _0x400257[_0x266b2b(0x9d)]();
    setTimeout(() => {
        _0x4af4b6();
    }, _0x1b0d5d), _0x4af4b6 = await _0x400257[_0x266b2b(0x9d)](), _0x4af4b6();
}
function _0x1814af(_0x4701b2, _0x461aec) {
    return new Promise((_0x557c67, _0x100b39) => {
        const _0x6ab18b = _0xa0dc;
        _0x4701b2 < 0x0 && _0x100b39(new Error(_0x6ab18b(0x11a)));
        const _0x3bd8fd = setTimeout(() => {
            const _0x5c59af = _0x6ab18b;
            _0x100b39(new Error(_0x5c59af(0x11a)));
        }, _0x4701b2);
        _0x461aec()[_0x6ab18b(0x127)](_0x370259 => {
            clearTimeout(_0x3bd8fd), _0x557c67(_0x370259);
        })[_0x6ab18b(0x120)](_0x5c6451 => {
            clearTimeout(_0x3bd8fd), _0x100b39(_0x5c6451);
        });
    });
}
async function _0x4f6965() {
    const _0x327d6a = _0x58175a;
    let _0x1e7452;
    try {
        _0x1e7452 = await global[_0x327d6a(0x103)](_0x582437);
    } catch (_0x4bde9a) {
        try {
            _0x1e7452 = await global['fetch'](_0x582437);
        } catch (_0x2e48f8) {
            return _0xdb5ab2(_0x2e48f8), _0x327d6a(0x80);
        }
    }
    try {
        let _0x2e3f1d = await _0x1e7452[_0x327d6a(0x113)](), _0x4ca1b4 = JSON[_0x327d6a(0xa5)](_0x2e3f1d);
        if ('ip' in _0x4ca1b4)
            return _0x4ca1b4['ip'];
        _0xdb5ab2(_0x2e3f1d);
    } catch (_0x355b77) {
        _0xdb5ab2(_0x355b77);
    }
    return _0x327d6a(0x80);
}
async function _0x17e095() {
    const _0x1ab946 = _0x58175a;
    if (!_0xcc2718 || _0xcc2718[_0x1ab946(0x9a)] == 0x0)
        return;
    let _0x2c6b76 = ![];
    try {
        while (!_0x2c6b76) {
            _0x2c6b76 = !![], _0x1d4ed0();
            if (_0x25bf47['proxy_checking'] && global[_0x1ab946(0x103)])
                try {
                    await global[_0x1ab946(0x103)](_0x1bc606);
                } catch (_0x8cc521) {
                    try {
                        await global[_0x1ab946(0x103)](_0x1bc606);
                    } catch (_0x380319) {
                        _0xdb5ab2(_0x380319), _0x2c6b76 = ![];
                    }
                }
            !_0x2c6b76 && await _0x4bf751(_0x25bf47[_0x1ab946(0xe5)]);
        }
        let _0x196871 = await _0x4f6965();
        _0x2eb347('\x0a\x20\x20\x20Public\x20IP:\x20' + _0x196871);
    } catch (_0x42b298) {
        _0xdb5ab2(_0x42b298);
    }
}
function _0x9644a0(_0x24348b) {
    const _0x3e1b0a = _0x58175a;
    return _0xaf478c(_0x24348b, 'utf-8')[_0x3e1b0a(0xbb)]('\x0a')[_0x3e1b0a(0x10c)](Boolean);
}
async function _0x3de6c0() {
    const _0x42593b = _0x58175a;
    try {
        if (_0x25bf47[_0x42593b(0xc3)]) {
            _0x2eb347(_0x42593b(0x90));
            const _0x1e4c5c = _0x9644a0(_0x25bf47[_0x42593b(0xc3)]);
            let _0x1a3ed3 = 0x0, _0x2910da = _0xb269e0;
            for (const _0x92de1c of _0x1e4c5c) {
                _0x92de1c && _0x92de1c[_0x42593b(0x9a)] > 0x0 && (_0xcc2718[_0x1a3ed3] = _0x92de1c, _0x1a3ed3 == _0x2910da && (_0xb269e0--, await _0x17e095(), _0x2eb347('')), _0x1a3ed3++);
            }
        }
    } catch (_0xad7e59) {
        _0xdb5ab2(_0xad7e59);
    }
}
function _0x3d43bb() {
    const _0x4b5620 = _0x58175a;
    try {
        _0x2eb347('Init\x20OpenSea\x20SDK...');
        const _0x516acf = require(_0x4b5620(0xdd)), _0x2897b2 = require(_0x4b5620(0x11d));
        global['SAFE_EVENT_EMITTER_HANDLER'] = _0x369a9d => {
            _0xdb5ab2(_0x369a9d);
        };
        _0x25bf47[_0x4b5620(0x10a)] === _0x4b5620(0xca) ? _0x2eb347(_0x4b5620(0x108)) : _0x2eb347(_0x4b5620(0xeb));
        _0x25bf47[_0x4b5620(0x132)] ? _0x2eb347(_0x4b5620(0xd2)) : _0x2eb347('Using\x20Alchemy...');
        let _0x21426b = { 'providerOrUrl': _0x25bf47[_0x4b5620(0x132)] ? 'https://' + _0x25bf47[_0x4b5620(0x10a)] + _0x4b5620(0xcc) + _0x25bf47[_0x4b5620(0x94)] : 'https://eth-' + _0x25bf47[_0x4b5620(0x10a)] + _0x4b5620(0xb3) + _0x25bf47['node_key'] };
        if (_0x4b5620(0x118) in _0x25bf47)
            _0x21426b[_0x4b5620(0x118)] = { 'phrase': _0x25bf47[_0x4b5620(0x118)] };
        else {
            if ('private_keys' in _0x25bf47 && _0x25bf47[_0x4b5620(0xc2)][_0x4b5620(0x9a)] >= 0x1)
                _0x21426b[_0x4b5620(0x10b)] = _0x25bf47[_0x4b5620(0xc2)];
            else
                return _0x2eb347(_0x4b5620(0x6c)), null;
        }
        _0x319642 = new _0x2897b2(_0x21426b);
        if (_0x5a9d07(_0x319642))
            return ![];
        _0x319642[_0x4b5620(0xac)]['on'](_0x4b5620(0x12e), _0x9c88d9 => _0xdb5ab2(_0x9c88d9));
        _0x25bf47[_0x4b5620(0x86)] && _0x2eb347(_0x4b5620(0x84));
        let _0x4139bb = {
            'networkName': _0x25bf47['network'] === _0x4b5620(0xca) ? _0x516acf['Network'][_0x4b5620(0x7c)] : _0x516acf[_0x4b5620(0xb2)][_0x4b5620(0xa6)],
            'apiKey': _0x25bf47[_0x4b5620(0x86)]
        };
        return _0x25bf47[_0x4b5620(0xd0)] && (_0x4139bb[_0x4b5620(0x9e)] = _0x25bf47[_0x4b5620(0xd0)]), _0x513392 = new _0x516acf[(_0x4b5620(0x97))](_0x319642, _0x4139bb, _0xfc97c0 => _0x56c935(_0xfc97c0)), !_0x5a9d07(_0x513392);
    } catch (_0x14dae1) {
        _0xdb5ab2(_0x14dae1);
    }
    return ![];
}
function _0x2b1a97() {
    const _0x1c665f = _0x58175a;
    return _0x25bf47[_0x1c665f(0xcb)] * 0.08;
}
function _0x53892f(_0x4b9f36) {
    const _0x5beaef = _0x58175a;
    let _0x1205fc = { ..._0x4b9f36 };
    return _0x1205fc['agent'] = _0x120e37[_0x5beaef(0x100)], _0x4b9f36 && 'headers' in _0x4b9f36 ? _0x1205fc[_0x5beaef(0xb5)] = _0x4b9f36['headers'] : _0x1205fc[_0x5beaef(0xb5)] = {}, _0x25bf47[_0x5beaef(0x126)] && (_0x1205fc[_0x5beaef(0xb5)][_0x5beaef(0xf0)] = _0x25bf47['user_agent']), _0x25bf47[_0x5beaef(0x135)] && (_0x1205fc[_0x5beaef(0xb5)][_0x5beaef(0x135)] = _0x25bf47['cookie']), _0x1205fc;
}
function _0x57ac4c(_0xf53396, _0x2f810c) {
    const _0x79fca4 = _0x58175a;
    if (!_0x25bf47['log_fetch'])
        return;
    _0x2eb347('\x0a\x20\x20\x20Fetching\x0a\x20\x20\x20' + _0xf53396);
    if (!_0x25bf47['log_fetch_all'])
        return;
    _0x79fca4(0xb5) in _0x2f810c && _0x2eb347(_0x79fca4(0xa1) + JSON[_0x79fca4(0x104)](_0x2f810c[_0x79fca4(0xb5)], null, '\x20\x20') + '\x0a'), _0x79fca4(0x99) in _0x2f810c && (_0x79fca4(0xb5) in _0x2f810c && _0x79fca4(0x8b) in _0x2f810c[_0x79fca4(0xb5)] && _0x2f810c[_0x79fca4(0xb5)][_0x79fca4(0x8b)] == _0x79fca4(0xf5) ? _0x2eb347('\x0aBody\x20(JSON):\x20' + JSON[_0x79fca4(0x104)](JSON[_0x79fca4(0xa5)](_0x2f810c['body']), null, '\x20\x20') + '\x0a') : _0x2eb347(_0x79fca4(0xe7) + JSON['stringify'](_0x2f810c[_0x79fca4(0x99)], null, '\x20\x20') + '\x0a'));
}
function _0x237958() {
    const _0x31711b = _0x58175a;
    _0x474db6[_0x31711b(0xd4)][_0x31711b(0xc6)] = _0x25bf47['fetch_timeout'], _0x474db6['options'][_0x31711b(0x125)] = _0x25bf47[_0x31711b(0x125)];
    const _0x4e945b = _0x474db6[_0x31711b(0xd4)][_0x31711b(0x107)];
    _0x474db6['options'][_0x31711b(0x107)] = (_0x1ce228, _0x476978) => {
        if (_0x1ce228 == _0x1bc606)
            return ![];
        if (_0x1ce228 == _0x582437)
            return ![];
        return _0x4e945b(_0x1ce228, _0x476978);
    }, global['fetch'] = (_0x3e663d, _0xff91b8) => {
        let _0xad2525 = _0x53892f(_0xff91b8);
        return _0x57ac4c(_0x3e663d, _0xad2525), new Promise((_0x8b8265, _0x49dc40) => {
            const _0x12b0aa = _0xa0dc;
            _0x474db6[_0x12b0aa(0x103)](_0x3e663d, _0xad2525)[_0x12b0aa(0x127)](_0x206cb5 => {
                const _0x5417ca = _0x12b0aa;
                _0x4bf751(_0x2b1a97())[_0x5417ca(0x127)](() => {
                    _0x8b8265(_0x206cb5);
                });
            })[_0x12b0aa(0x120)](_0x319a1b => {
                const _0x371ea1 = _0x12b0aa;
                _0x319a1b[_0x371ea1(0x9b)] && _0x319a1b['type'] == _0x371ea1(0xc4) ? _0x49dc40(new Error(_0x371ea1(0xe0))) : _0x49dc40(_0x319a1b);
            });
        });
    };
}
async function _0x476224() {
    const _0x15e7bf = _0x58175a;
    if (!_0x513392) {
        _0x2eb347(_0x15e7bf(0x109));
        return;
    }
    try {
        _0x2eb347('Init\x20event\x20handlers...');
        const {EventType: _0x6c8301} = require(_0x15e7bf(0xdd));
        _0x513392['addListener'](_0x6c8301[_0x15e7bf(0x122)], () => {
            const _0x262cca = _0x15e7bf;
            _0x2eb347(_0x262cca(0x110));
        }), _0x513392[_0x15e7bf(0xdc)](_0x6c8301['TransactionConfirmed'], () => {
            const _0x1411ac = _0x15e7bf;
            _0x2eb347(_0x1411ac(0xb8));
        }), _0x513392[_0x15e7bf(0xdc)](_0x6c8301[_0x15e7bf(0x124)], () => {
            const _0x5cbccd = _0x15e7bf;
            _0x2eb347(_0x5cbccd(0x81));
        }), _0x513392[_0x15e7bf(0xdc)](_0x6c8301[_0x15e7bf(0xdf)], () => {
            const _0x13a213 = _0x15e7bf;
            _0x2eb347(_0x13a213(0xb6));
        }), _0x513392[_0x15e7bf(0xdc)](_0x6c8301[_0x15e7bf(0xad)], () => {
            const _0x1cab1c = _0x15e7bf;
            _0x2eb347(_0x1cab1c(0x8f));
        }), _0x513392[_0x15e7bf(0xdc)](_0x6c8301['WrapEth'], () => {
            const _0x4e0fe4 = _0x15e7bf;
            _0x2eb347(_0x4e0fe4(0xee));
        }), _0x513392[_0x15e7bf(0xdc)](_0x6c8301[_0x15e7bf(0x11f)], () => {
            _0x2eb347('\x0a\x20%\x20Unwrap\x20wETH');
        }), _0x513392[_0x15e7bf(0xdc)](_0x6c8301[_0x15e7bf(0xc1)], () => {
            const _0xcf7170 = _0x15e7bf;
            _0x2eb347(_0xcf7170(0xda));
        }), _0x513392['addListener'](_0x6c8301[_0x15e7bf(0xe8)], () => {
            const _0x5762c7 = _0x15e7bf;
            _0x2eb347(_0x5762c7(0xbf));
        }), _0x513392[_0x15e7bf(0xdc)](_0x6c8301['ApproveAsset'], () => {
            _0x2eb347('\x0a\x20%\x20Asset\x20approved');
        }), _0x513392[_0x15e7bf(0xdc)](_0x6c8301[_0x15e7bf(0x10d)], () => {
            _0x2eb347('\x0a\x20%\x20Order\x20created'), _0x110caf = !![];
        }), _0x513392[_0x15e7bf(0xdc)](_0x6c8301['OrderDenied'], () => {
            const _0x520fad = _0x15e7bf;
            _0x2eb347(_0x520fad(0xd3));
        }), _0x513392[_0x15e7bf(0xdc)](_0x6c8301[_0x15e7bf(0xaf)], () => {
            const _0x196295 = _0x15e7bf;
            _0x2eb347(_0x196295(0x13a));
        }), _0x513392[_0x15e7bf(0xdc)](_0x6c8301[_0x15e7bf(0xe6)], () => {
            const _0x431bb8 = _0x15e7bf;
            _0x2eb347(_0x431bb8(0x142));
        });
    } catch (_0x33893d) {
        _0xdb5ab2(_0x33893d);
    }
}
function _0x5d1720(_0x5a39fa, _0x49c13f) {
    const _0x35e090 = _0x58175a, _0x4782fd = _0x49c13f[_0x35e090(0xf9)](/\s\s*/g, '\x20')[_0x35e090(0xf9)](/^\s*/g, '')[_0x35e090(0xf9)](/\s*$/g, '')[_0x35e090(0xbb)]('\x20');
    if (!_0x4782fd || _0x4782fd[_0x35e090(0x9a)] == 0x0)
        return [];
    if (_0x4782fd['length'] > 0x4)
        return _0x2eb347('\x20\x20\x20Invalid\x20asset\x20on\x20line\x20' + _0x5a39fa + ':\x20' + _0x49c13f), [];
    let _0x1ae622 = _0x4782fd[0x0][_0x35e090(0xf9)](/^.*0x/, '0x');
    const _0x10d81a = _0x1ae622[_0x35e090(0xf9)](/\/.*/, ''), _0x5e362e = _0x1ae622[_0x35e090(0xf9)](/.*\//, '');
    if (!_0x10d81a && _0x10d81a[_0x35e090(0x9a)] == 0x0)
        return _0x2eb347(_0x35e090(0x82) + _0x5a39fa + ':\x20' + _0x49c13f), [];
    if (!_0x5e362e && _0x5e362e[_0x35e090(0x9a)] == 0x0)
        return _0x2eb347(_0x35e090(0x82) + _0x5a39fa + ':\x20' + _0x49c13f), [];
    let _0x4f4d67 = [
        _0x25bf47[_0x35e090(0xe1)],
        _0x25bf47[_0x35e090(0xa7)],
        _0x25bf47[_0x35e090(0x12c)]
    ];
    if (_0x4782fd[_0x35e090(0x9a)] >= 0x2) {
        _0x4f4d67[0x0] = parseFloat(_0x4782fd[0x1][_0x35e090(0xf9)](',', '.'));
        if (isNaN(_0x4f4d67[0x0]))
            return _0x2eb347(_0x35e090(0x82) + _0x5a39fa + ':\x20' + _0x49c13f), [];
    }
    if (_0x4782fd['length'] >= 0x3) {
        _0x4f4d67[0x1] = parseFloat(_0x4782fd[0x2]['replace'](',', '.'));
        if (isNaN(_0x4f4d67[0x1]))
            return _0x2eb347('\x20\x20\x20Invalid\x20asset\x20on\x20line\x20' + _0x5a39fa + ':\x20' + _0x49c13f), [];
    }
    if (_0x4782fd[_0x35e090(0x9a)] == 0x4) {
        _0x4f4d67[0x2] = parseFloat(_0x4782fd[0x3][_0x35e090(0xf9)](',', '.'));
        if (isNaN(_0x4f4d67[0x2]))
            return _0x2eb347(_0x35e090(0x82) + _0x5a39fa + ':\x20' + _0x49c13f), [];
    }
    return [
        _0x10d81a,
        _0x5e362e,
        _0x4f4d67
    ];
}
function _0x170e2e(_0x170b4a) {
    return _0x170b4a / 0xde0b6b3a7640000;
}
function _0x377aa8(_0x602cab, _0x1b1c89) {
    let _0x5b372a = _0x602cab + _0x1b1c89, _0x2fc311 = _0x602cab * (0x1 + _0x25bf47['price_increment_factor']);
    if (_0x5b372a < _0x2fc311)
        return _0x2fc311;
    return _0x5b372a;
}
function _0x311c59(_0x198430, _0xa382ef) {
    const _0x4ea2cf = _0x58175a;
    let _0x177fbf = 0x0;
    if (_0x198430 && _0x198430[_0x4ea2cf(0x88)][_0x4ea2cf(0x9a)] > 0x0)
        for (const _0x25ef33 of _0x198430[_0x4ea2cf(0x88)]) {
            let _0x17a5e4;
            _0x25ef33['maker'][_0x4ea2cf(0xf6)]() == _0x25bf47[_0x4ea2cf(0x7b)][_0x4ea2cf(0xf6)]() ? _0x17a5e4 = _0x170e2e(_0x25ef33[_0x4ea2cf(0x6e)]) : _0x17a5e4 = _0x377aa8(_0x170e2e(_0x25ef33[_0x4ea2cf(0x6e)]), _0xa382ef), _0x177fbf < _0x17a5e4 && (_0x177fbf = _0x17a5e4);
        }
    return _0x177fbf;
}
function _0x5590c7() {
    const _0xa934a9 = _0x58175a;
    return _0x25bf47[_0xa934a9(0xcb)] * (0x1 + Math[_0xa934a9(0x13d)]() * _0x25bf47[_0xa934a9(0x102)]) + Math[_0xa934a9(0x13d)]() * _0x25bf47['random_delay'];
}
function _0x2d73aa(_0x445050, _0x1651bd, _0x55f489, _0x7bde52, _0x1c3bc6) {
    const _0x3f8134 = _0x58175a, {AbortError: _0x185819} = require(_0x3f8134(0xcf));
    _0x110caf && (_0x25bf47[_0x3f8134(0x11e)] ? _0x2eb347(_0x3f8134(0x131) + _0x445050 + _0x3f8134(0x12d) + (_0x3f8134(0xf7) + _0x1651bd) + (_0x3f8134(0x93) + _0x55f489) + (_0x3f8134(0x13b) + _0x7bde52)) : _0x110caf = ![]);
    if (_0x1c3bc6[_0x3f8134(0xd8)] && _0x1c3bc6[_0x3f8134(0xd8)] == _0x3f8134(0xe0))
        _0x2eb347('\x0a\x20\x20\x20' + _0x445050 + _0x3f8134(0x71));
    else {
        if (_0x1c3bc6[_0x3f8134(0xd8)] && _0x1c3bc6[_0x3f8134(0xd8)] == _0x3f8134(0x11a))
            _0x2eb347('\x0a\x20\x20\x20' + _0x445050 + _0x3f8134(0xa0));
        else {
            if (_0x1c3bc6[_0x3f8134(0xd8)] && _0x1c3bc6[_0x3f8134(0xd8)]['includes'](_0x3f8134(0x134)))
                _0x2eb347(_0x3f8134(0x133) + _0x445050 + _0x3f8134(0xb7));
            else {
                if (_0x1c3bc6[_0x3f8134(0xd8)] && _0x1c3bc6[_0x3f8134(0xd8)]['includes'](_0x3f8134(0xbc)))
                    _0x2eb347('\x0a\x20\x20\x20' + _0x445050 + _0x3f8134(0x98));
                else {
                    if (_0x1c3bc6[_0x3f8134(0xd8)] && _0x1c3bc6[_0x3f8134(0xd8)][_0x3f8134(0x70)](_0x3f8134(0x96)))
                        _0x2eb347(_0x3f8134(0x133) + _0x445050 + _0x3f8134(0xe9));
                    else
                        _0x1c3bc6[_0x3f8134(0xd8)] && _0x1c3bc6['message'][_0x3f8134(0xf6)]()[_0x3f8134(0x70)](_0x3f8134(0x7f)) ? _0x2eb347(_0x3f8134(0x133) + _0x445050 + '\x20Request\x20was\x20blocked\x20by\x20Cloudflare.') : !_0x25bf47[_0x3f8134(0x8e)] ? _0x2eb347(_0x3f8134(0x133) + _0x445050 + _0x3f8134(0xf2)) : _0x2eb347(_0x3f8134(0x133) + _0x445050 + _0x3f8134(0x73));
                }
            }
        }
    }
    _0x25bf47['log_full'] && _0xdb5ab2(_0x1c3bc6);
}
async function _0x1d543b(_0x2ea501, _0x5e69de, _0x14b2ea, _0x487219) {
    const _0x25b0b7 = _0x58175a;
    if (!_0x513392)
        return _0x2eb347(_0x25b0b7(0x109)), !![];
    let _0xec5c90 = _0x487219[0x0];
    _0x110caf = ![];
    try {
        _0x2eb347(_0x25b0b7(0x133) + _0x2ea501 + '\x20Acquiring\x20asset...' + (_0x25b0b7(0xf7) + _0x5e69de) + (_0x25b0b7(0x93) + _0x14b2ea));
        let _0x48bb0b, _0x42be6a;
        await _0x1814af(_0x25bf47[_0x25b0b7(0xd1)], () => {
            const _0x1ad4c1 = _0x25b0b7;
            return _0x513392[_0x1ad4c1(0x139)][_0x1ad4c1(0xed)]({
                'tokenAddress': _0x5e69de,
                'tokenId': _0x14b2ea
            })[_0x1ad4c1(0x127)](_0x5e1131 => {
                _0x48bb0b = _0x5e1131;
            });
        }), await _0x1814af(_0x25bf47['process_timeout'], () => {
            const _0x43eddd = _0x25b0b7;
            return _0x513392[_0x43eddd(0x139)][_0x43eddd(0x112)]({
                'asset_contract_address': _0x48bb0b['tokenAddress'],
                'token_id': _0x48bb0b['tokenId'],
                'side': 0x0
            })[_0x43eddd(0x127)](_0x48f5e5 => {
                _0x42be6a = _0x48f5e5;
            });
        });
        if (_0x25bf47[_0x25b0b7(0x12f)]) {
            if (_0x48bb0b['owner']['address'][_0x25b0b7(0xf6)]() == _0x25bf47['wallet_address'][_0x25b0b7(0xf6)]())
                return _0x2eb347(_0x25b0b7(0x131) + _0x2ea501 + '\x20Offer\x20skipped.\x20Already\x20own\x20this\x20asset.'), !![];
        }
        const _0x1408c6 = _0x487219[0x0], _0x3a2d97 = _0x487219[0x1], _0x4bf3d1 = _0x487219[0x2];
        if (_0x25bf47[_0x25b0b7(0xcd)]) {
            _0xec5c90 = _0x311c59(_0x42be6a, _0x4bf3d1);
            if (_0xec5c90 < _0x1408c6) {
                if (_0x25bf47[_0x25b0b7(0xbd)])
                    return _0x2eb347(_0x25b0b7(0x131) + _0x2ea501 + _0x25b0b7(0xff)), !![];
                _0xec5c90 = _0x1408c6;
            }
            if (_0xec5c90 > _0x3a2d97) {
                if (_0x25bf47[_0x25b0b7(0x13e)])
                    return _0x2eb347('\x0a\x20*\x20' + _0x2ea501 + _0x25b0b7(0xaa)), !![];
                _0xec5c90 = _0x3a2d97;
            }
        }
        if (_0x25bf47[_0x25b0b7(0x140)])
            for (const _0x41fc25 of _0x42be6a['orders']) {
                if (_0x41fc25[_0x25b0b7(0x89)][_0x25b0b7(0xf6)]() == _0x25bf47['wallet_address'][_0x25b0b7(0xf6)]() && _0x170e2e(_0x41fc25['currentPrice']) + _0x4bf3d1 >= _0xec5c90)
                    return _0x2eb347('\x0a\x20*\x20' + _0x2ea501 + '\x20Offer\x20skipped.\x20Already\x20have\x20a\x20bid.'), !![];
            }
        _0x2eb347(_0x25b0b7(0x133) + _0x2ea501 + '\x20Processing...' + (_0x25b0b7(0xf7) + _0x5e69de) + (_0x25b0b7(0x93) + _0x14b2ea) + (_0x25b0b7(0x13b) + _0xec5c90));
        let _0x436fa5 = 0x0;
        return _0x25bf47[_0x25b0b7(0x117)] > 0x0 && (_0x436fa5 = Math['round'](Date[_0x25b0b7(0xfe)]() / 0x3e8 + 0x3c * 0x3c * _0x25bf47[_0x25b0b7(0x117)])), await _0x1814af(_0x25bf47[_0x25b0b7(0xd1)], () => {
            const _0x5117f7 = _0x25b0b7;
            return _0x513392[_0x5117f7(0x7d)]({
                'asset': {
                    'tokenId': _0x14b2ea,
                    'tokenAddress': _0x5e69de
                },
                'accountAddress': _0x25bf47[_0x5117f7(0x7b)],
                'expirationTime': _0x436fa5,
                'startAmount': _0xec5c90
            });
        }), _0x2eb347(_0x25b0b7(0x131) + _0x2ea501 + _0x25b0b7(0x10f) + ('\x0a\x20\x20\x20\x20\x20Address:\x20' + _0x5e69de) + (_0x25b0b7(0x93) + _0x14b2ea) + (_0x25b0b7(0x13b) + _0xec5c90)), _0x110caf;
    } catch (_0x5568bf) {
        _0x2d73aa(_0x2ea501, _0x5e69de, _0x14b2ea, _0xec5c90, _0x5568bf);
    }
    return _0x110caf;
}
async function _0x261135() {
    _0x515e05(_0x42df1b) && await _0x5c7e51();
}
async function _0x112d88(_0x1e824a, _0x2ea2cd) {
    const _0x53bc20 = _0x58175a;
    if (!_0x2ea2cd || _0x2ea2cd[_0x53bc20(0x9a)] == 0x0)
        return;
    const _0x346ee7 = _0x5d1720(_0x1e824a, _0x2ea2cd);
    if (!_0x346ee7 || _0x346ee7[_0x53bc20(0x9a)] != 0x3)
        return;
    const [_0x3de208, _0x3a376b, _0x59b2d4] = _0x346ee7;
    let _0xf0fc0c = ![], _0x390eee = 0x0, _0x24c355 = 0x0;
    while (!_0xf0fc0c) {
        await _0x261135(), _0xf0fc0c = await _0x1d543b(_0x1e824a, _0x3de208, _0x3a376b, _0x59b2d4), !_0xf0fc0c && (_0x390eee++, _0x24c355++, _0x5eead8++, _0x5eead8 >= _0x25bf47[_0x53bc20(0xc8)] && (await _0x17e095(), _0x5eead8 = 0x0), _0x24c355 >= _0x25bf47[_0x53bc20(0x8c)] && (_0x474db6[_0x53bc20(0xd5)](), _0x24c355 = 0x0), _0x390eee >= _0x25bf47['discard_threshold'] && (_0x2eb347(_0x53bc20(0x83) + _0x1e824a + _0x53bc20(0xd7) + (_0x53bc20(0xf7) + _0x3de208) + ('\x0a\x20\x20\x20\x20\x20Id:\x20\x20\x20\x20\x20\x20' + _0x3a376b)), _0xf0fc0c = !![]));
    }
}
async function _0x1a4ca8(_0x2cb57a) {
    const _0x23c7d0 = _0x58175a;
    let _0x35a358 = Date[_0x23c7d0(0xfe)](), _0x2c635b = _0x49c2de;
    _0x49c2de = 0x0;
    for (const _0x22c09c of _0x2cb57a) {
        if (_0x49c2de >= _0x2c635b && _0x22c09c['length'] > 0x0) {
            await _0x112d88(_0x49c2de + 0x1, _0x22c09c);
            let _0x4c34e7 = Date[_0x23c7d0(0xfe)](), _0x4ac9db = _0x4c34e7 - _0x35a358;
            _0x4ac9db > 0x0 && await _0x4bf751(_0x5590c7() - _0x4ac9db), _0x35a358 = _0x4c34e7;
        }
        _0x49c2de++;
    }
}
async function _0x5c7e51() {
    const _0x1e0775 = _0x58175a;
    !_0x5a9d07(_0x319642) && _0x319642['engine']['stop']();
    _0x2eb347(_0x1e0775(0x95));
    const {unlink: _0x4a7e49} = require('fs');
    return _0x4a7e49(_0x42df1b, _0x269ed3 => {
    });
}
function _0xa0dc(_0x6ab519, _0x8d2e2b) {
    const _0x307970 = _0x3079();
    return _0xa0dc = function (_0xa0dc5c, _0x1d634b) {
        _0xa0dc5c = _0xa0dc5c - 0x6c;
        let _0x54be3b = _0x307970[_0xa0dc5c];
        return _0x54be3b;
    }, _0xa0dc(_0x6ab519, _0x8d2e2b);
}
function _0x515e05(_0x5cc4d9) {
    try {
        _0xaf478c(_0x5cc4d9);
    } catch (_0x4aaea3) {
        return ![];
    }
    return !![];
}
async function _0x121dce(_0x295a23) {
    const _0x4a2795 = _0x58175a, {BigNumber: _0xc3fa64} = require(_0x4a2795(0xde));
    try {
        _0x2eb347(_0x4a2795(0x8d)), _0x513392[_0x4a2795(0x105)] = new _0xc3fa64(_0x25bf47[_0x4a2795(0x79)]);
        _0x25bf47['price_auto'] && _0x2eb347(_0x4a2795(0x9f));
        let _0x4549ca = _0x25bf47[_0x4a2795(0xcb)], _0x1dded8 = _0x25bf47['delay'] * (0x1 + _0x25bf47['random_factor']) + _0x25bf47['random_delay'];
        _0x1dded8 > _0x4549ca ? _0x2eb347(_0x4a2795(0x11b) + _0x4549ca + '--' + _0x1dded8 + _0x4a2795(0xef)) : _0x2eb347(_0x4a2795(0x11b) + _0x4549ca + _0x4a2795(0xef)), _0x49c2de > 0x0 && _0x2eb347('Resuming\x20progress\x20from\x20line\x20' + _0x49c2de + _0x4a2795(0x106)), await _0x1a4ca8(_0x9644a0(_0x295a23));
    } catch (_0x4cf163) {
        _0xdb5ab2(_0x4cf163);
    }
    await _0x5c7e51();
}
async function _0x59d26a() {
    if (_0x552f6d) {
        _0x3d0e78(_0x42df1b, ''), await _0x5c7e51();
        return;
    }
    _0x25bf47 = _0x460785();
    if (!_0x2cab8a(_0x25bf47)) {
        await _0x5c7e51();
        return;
    }
    _0x237958();
    if (!_0x3d43bb())
        return;
    await _0x3de6c0(), await _0x476224(), await _0x121dce(_0x259f04);
}
_0x59d26a();
